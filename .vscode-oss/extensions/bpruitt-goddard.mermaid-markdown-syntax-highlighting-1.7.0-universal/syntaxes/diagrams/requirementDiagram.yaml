- comment: Requirement Diagram
  begin: ^\s*(requirementDiagram)
  beginCaptures:
    '1':
      name: keyword.control.mermaid
  patterns:
    - match: \%%.*
      name: comment
    - comment: (requirement) (name) ({)
      begin: !regex |-
        ^\s*((?:functional|interface|performance|physical)?requirement|designConstraint) # requirement
        \s*(["\(\)$&%\^/#.,?!;:*+=<>\'\\\-\w\s]*) # name
        \s*({) # }
      beginCaptures:
        '1':
          name: keyword.control.mermaid
        '2':
          name: variable
        '3':
          name: keyword.control.mermaid
      patterns:
        - comment: (id:) (variable id)
          match: !regex |-
            \s*(id:) # id:
            \s*([$&%\^/#.,?!;:*+<>_\'\\\w\s]+) # Variable id
          captures:
            '1':
              name: keyword.control.mermaid
            '2':
              name: variable
        - comment: (text:) (text string)
          match: !regex |-
            \s*(text:) # text:
            \s*([$&%\^/#.,?!;:*+<>_\'\\\w\s]+) # Text string
          captures:
            '1':
              name: keyword.control.mermaid
            '2':
              name: string
        - comment: (risk:) (risk option)
          match: !regex |-
            \s*(risk:) # risk:
            \s*(low|medium|high)\s*$ # risk option
          captures:
            '1':
              name: keyword.control.mermaid
            '2':
              name: entity.name.function.mermaid
        - comment: (verifyMethod)(:) (method)
          match: !regex |-
            \s*(verifymethod:) # verifyMethod:
            \s*(analysis|inspection|test|demonstration)\s*$ # risk option
          captures:
            '1':
              name: keyword.control.mermaid
            '2':
              name: entity.name.function.mermaid
      end: !regex |-
        \s*(}) # end bracket
      endCaptures:
        '1':
          name: keyword.control.mermaid
    - comment: (element) (name) ({)
      begin: !regex |-
        ^\s*(element) # element
        \s*(["\(\)$&%\^/#.,?!;:*+=<>\'\\\-\w\s]*) # name
        \s*({) # }
      beginCaptures:
        '1':
          name: keyword.control.mermaid
        '2':
          name: variable
        '3':
          name: keyword.control.mermaid
      patterns:
        - comment: (type:) (user type)
          match: !regex |-
            \s*(type:) # id:
            \s*(["$&%\^/#.,?!;:*+<>_\'\\\w\s]+) # user type
          captures:
            '1':
              name: keyword.control.mermaid
            '2':
              name: variable
        - comment: (docref:) (user ref)
          match: !regex |-
            \s*(docref:) # docref:
            \s*([$&%\^/#.,?!;:*+<>_\'\\\w\s]+) # user ref
          captures:
            '1':
              name: keyword.control.mermaid
            '2':
              name: variable
      end: !regex |-
        \s*(}) # end bracket
      endCaptures:
        '1':
          name: keyword.control.mermaid
    - comment: (source) (-) (type) (->) (destination)
      match: !regex |-
        ^\s*([\w]+) # source
        \s*(-) # -
        \s*(contains|copies|derives|satisfies|verifies|refines|traces) # type
        \s*(->) # ->
        \s*([\w]+)\s*$ # destination
      captures:
        '1':
          name: variable
        '2':
          name: keyword.control.mermaid
        '3':
          name: keyword.control.mermaid
        '4':
          name: keyword.control.mermaid
        '5':
          name: variable
    - comment: (destination) (<-) (type) (-) (source)
      match: !regex |-
        ^\s*([\w]+) # destination
        \s*(<-) # <-
        \s*(contains|copies|derives|satisfies|verifies|refines|traces) # type
        \s*(-) # -
        \s*([\w]+)\s*$ # source
      captures:
        '1':
          name: variable
        '2':
          name: keyword.control.mermaid
        '3':
          name: keyword.control.mermaid
        '4':
          name: keyword.control.mermaid
        '5':
          name: variable
  end: (^|\G)(?=\s*[`:~]{3,}\s*$)
